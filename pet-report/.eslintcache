[{"/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/index.js":"1","/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/reportWebVitals.js":"2","/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/App.js":"3","/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/Form.js":"4","/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/components/NavAppBar.js":"5","/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/components/DashBoard.js":"6","/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/components/QuestionsModal.js":"7","/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/components/SettingsModal.js":"8","/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/components/Login.js":"9","/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/components/Register.js":"10","/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/components/About.js":"11"},{"size":543,"mtime":1614311944680,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1609537568042,"results":"14","hashOfConfig":"13"},{"size":722,"mtime":1614465903323,"results":"15","hashOfConfig":"13"},{"size":9231,"mtime":1609909648437,"results":"16","hashOfConfig":"17"},{"size":1156,"mtime":1614465989823,"results":"18","hashOfConfig":"13"},{"size":32487,"mtime":1614306912433,"results":"19","hashOfConfig":"13"},{"size":3414,"mtime":1614301276066,"results":"20","hashOfConfig":"13"},{"size":3740,"mtime":1614453692610,"results":"21","hashOfConfig":"13"},{"size":1110,"mtime":1614460291675,"results":"22","hashOfConfig":"13"},{"size":1141,"mtime":1614460979564,"results":"23","hashOfConfig":"13"},{"size":627,"mtime":1614468275198,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"vmx867",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1bte67m",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/index.js",[],["50","51"],"/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/reportWebVitals.js",[],"/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/App.js",["52","53"],"/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/Form.js",[],["54","55"],"/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/components/NavAppBar.js",[],"/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/components/DashBoard.js",["56"],"import React, { useState } from 'react'\n\nimport jsPdf from \"jspdf\";\nimport domtoimage from 'dom-to-image'\n\nimport QuestionsModal from './QuestionsModal.js'\nimport SettingsModal from './SettingsModal.js'\n\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf'\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\n\n\n\n\nexport default function DashBoard () {\n  /* Theme State */\n  const [selectTheme, setSelectTheme] = useState(true)\n  const [basicTheme, setBasicTheme] = useState(false)\n  const [boardingTheme, setBoardingTheme] = useState(false)\n  const [petSittingTheme, setPetSittingTheme] = useState(false)\n  const [groomingTheme, setGroomingTheme] = useState(false)\n  const [walkingTheme, setWalkingTheme] = useState(false)\n  /* Form State Set by the Form Editor */\n  const [companyName, setCompanyName] = useState('[Company Name]')\n  const [petName, setPetName] = useState('[Pet Name]')\n  const [date, setDate] = useState('[Date]')\n  /* Background color Theme */\n  const [backgroundTheme, setBackgroundTheme] = useState('light');\n  /* Basic Theme */\n  const [walks, setWalks] = useState('')\n  const [outsideTime, setOutsideTime] = useState('')\n  const [appetite, setAppetite] = useState('Ate Everything')\n  const [sociability, setSociability] = useState('Very Sociable')\n  const [behaviour, setBehaviour] = useState('Very Well Behaved')\n  const [grade, setGrade] = useState('A+')\n  const [notes, setNotes] = useState('To edit notes, use the panel to the right. To save this report card, click the PDF icon. When sending an email to a client, attach or drag the PDF into the body of the email.')\n  const [CTA, setCTA] = useState('www.example.com')\n  /* Boarding Theme */\n  const [gender, setGender] = useState('Their')\n  const [boardingFriends, setBoardingFriends] = useState('[Pet Friends]')\n  const [boardingToy, setBoardingToy] = useState('[Toy]')\n  const [boardingActivity, setBoardingActivity] = useState('[Activity]')\n  /* Pet Sitting Theme */\n  const [treats, setTreats] = useState('')\n  const [energy, setEnergy] = useState('Energetic')\n  /* Pet Grooming Theme */\n  const [ears, setEars] = useState('Great')\n  const [skin, setSkin] = useState('Great')\n  const [coat, setCoat] = useState('Great')\n  /* Walking Theme */\n  const [playedFetch, setPlayedFetch] = useState('Yes')\n  const [playedWithFriends, setPlayedWithFriends] = useState('Yes')\n  const [tuggedOnLeash, setTuggedOnLeash] = useState('No')\n  /* Form State Set by the Hide or Show Buttons */\n  const [showCompany, setShowCompany] = useState(true)\n  /* Basic Theme */\n  const [showWalks, setShowWalks] = useState(true)\n  const [showOutsideTime, setShowOutsideTime] = useState(true)\n  const [showAppetite, setShowAppetite] = useState(true)\n  const [showSociability, setShowSociability] = useState(true)\n  const [showBehaviour, setShowBehaviour] = useState(true)\n  const [showGrade, setShowGrade] = useState(true)\n  const [showNotes, setShowNotes] = useState(true)\n  const [showCTA, setShowCTA] = useState(false)\n  /* Boarding Theme */\n  const [showBoardingFriends, setShowBoardingFriends] = useState(true)\n  const [showFavoriteToy, setShowFavoriteToy] = useState(true)\n  const [showBoardingActivity, setShowBoardingActivity] = useState(true)\n  /* Pet Sitting Theme */\n  const [showTreats, setShowTreats] = useState(true)\n  const [showEnergy, setShowEnergy] = useState(true)\n  /* Pet Grooming Theme */\n  const [showEars, setShowEars] = useState(true)\n  const [showCoat, setShowCoat] = useState(true)\n  const [showSkin, setShowSkin] = useState(true)\n  /* Walking Theme */\n  const [showFetch, setShowFetch] = useState(true)\n  const [showPlayedWithFriends, setShowPlayedWithFriends] = useState(true)\n  const [showTuggedLeash, setShowTuggedLeash] = useState(true)\n\n\n\n\n  // reads what theme it is and sets state accordingly\n  const findTheme = (theme) => {\n    setSelectTheme(false);\n\n    if (theme === 'Basic') {\n      setBasicTheme(true)\n    } else if (theme !== 'Basic') {\n      setBasicTheme(false)\n    }\n    if (theme === 'Boarding') {\n      setBoardingTheme(true)\n    } else if (theme !== 'Boarding') {\n      setBoardingTheme(false)\n    }\n    if (theme === 'Pet Sitting') {\n      setPetSittingTheme(true)\n    } else if (theme !== 'Pet Sitting') {\n      setPetSittingTheme(false)\n    }\n    if (theme === 'Grooming') {\n      setGroomingTheme(true)\n    } else if (theme !== 'Grooming') {\n      setGroomingTheme(false)\n    }\n    if (theme === 'Walking') {\n      setWalkingTheme(true)\n    } else if (theme !== 'Walking') {\n      setWalkingTheme(false)\n    }\n    if (theme === 'Select') {\n      setSelectTheme(true)\n    } else if (theme !== 'Select') {\n      setSelectTheme(false)\n    }\n\n  }\n\n  // Reads what font is selected for Company name\n  const findCompanyFont = (font) => {\n    if (font === 'Sans Serif') {\n      document.getElementById('company-title').style.fontFamily = \"sans-serif\"\n    }\n    if (font === 'Candara') {\n      document.getElementById('company-title').style.fontFamily = \"candara\"\n    }\n    if (font === 'Copperplate') {\n      document.getElementById('company-title').style.fontFamily = \"copperplate\"\n    }\n    if (font === 'Didot') {\n      document.getElementById('company-title').style.fontFamily = \"didot\"\n    }\n    if (font === 'Cursive') {\n      document.getElementById('company-title').style.fontFamily = \"cursive\"\n    }\n  }\n\n\n\n  // Screenshot\n  const saveToPDF = () => {\n\n    const formArea = document.getElementById('screenshot');\n    document.getElementById('screenshot').style.color = 'rgb(0, 0, 0)'\n\n    domtoimage.toPng(formArea)\n      .then((dataUrl) => {\n        let img = new Image();\n        img.src = dataUrl;\n\n        const pdf = new jsPdf();\n        pdf.addImage(dataUrl, \"JPEG\", 10, 10);\n        pdf.save(`${petName}_${new Date().toISOString()}.PR-PRO.pdf`)\n      })\n      .then(() => {\n        if (backgroundTheme === 'dark') {\n          document.getElementById('screenshot').style.color = 'rgb(255, 255, 255)'\n        }\n      })\n  };\n\n  // Change background from light to dark, or dark to light\n  const changeTheme = () => {\n    if (backgroundTheme === 'light') {\n      document.body.style.backgroundColor = '#0f0f0f'\n      document.getElementById('screenshot').style.color = 'rgb(255, 255, 255)'\n      setBackgroundTheme('dark');\n    }\n    if (backgroundTheme === 'dark') {\n      document.body.style.backgroundColor = 'white'\n      document.getElementById('screenshot').style.color = 'black'\n      setBackgroundTheme('light');\n    }\n  }\n\n\n\n  return (\n    <div className=\"dashboard-wrapper\">\n\n      <div className=\"menu-left\">\n        <button className=\"save-pdf\" onClick={saveToPDF}>\n          <PictureAsPdfIcon />\n        </button>\n        <button className=\"set-theme\" onClick={changeTheme}>\n          <WbSunnyIcon />\n        </button>\n        <QuestionsModal />\n        <SettingsModal />\n      </div>\n\n      <div className=\"report-card-section\" id=\"screenshot\">\n        <div className=\"report-card-preview\">\n          {showCompany === true ? (\n            <h2 id=\"company-title\">{companyName}</h2>\n          ) : null}\n          <div className=\"name-and-date\">{petName}'s report card for the period of<br />\n            <span>{date}</span>\n          </div>\n\n          <img className=\"ribbon-image\" src=\"/images/ribbon.png\" />\n\n          {/* SELECT A THEME, THEME */}\n          {selectTheme === true ? (\n            <div className=\"report-data-section\">\n              <div className=\"report-data-col1\">\n                <p className=\"get-started\">Select a pet service type to get started</p>\n              </div>\n            </div>\n          ) : null}\n\n\n          {/* BASIC THEME */}\n          {basicTheme === true ? (\n            <div className=\"report-data-section\">\n              <div className=\"report-data-col1\">\n                {showWalks === true ? (\n                  <div className=\"number-of-walks\">Number of Walks:<span>{walks}</span></div>\n                ) : null}\n                {showOutsideTime === true ? (\n                  <div className=\"estimated-time-outisde\">Estimated Time Outside Per Day:<span>{outsideTime}</span></div>\n                ) : null}\n                {showAppetite === true ? (\n                  <div className=\"appetite\">Appetite:<span>{appetite}</span></div>\n                ) : null}\n                {showSociability === true ? (\n                  <div className=\"sociability\">Sociability:<span>{sociability}</span></div>\n                ) : null}\n                {showBehaviour === true ? (\n                  <div className=\"behaviour\">Behaviour:<span>{behaviour}</span></div>\n                ) : null}\n                {showGrade === true ? (\n                  <div className=\"overall-grade\">Overall Grade: <span>{grade}</span></div>\n                ) : null}\n                {showNotes === true ? (\n                  <div>\n                    <div className=\"notes\">Notes:</div>\n                    <textarea className=\"notes-input\" rows=\"9\" cols=\"67\" value={notes}></textarea>\n                  </div>\n                ) : null}\n                {showCTA === true ? (\n                  <div className=\"review-cta\">Please leave a review at {CTA}</div>\n                ) : null}\n              </div>\n            </div>\n          ) : null}\n\n          {/* BOARDING THEME */}\n          {boardingTheme === true ? (\n            <div className=\"report-data-section\">\n              <div className=\"report-data-col1\">\n                {showBoardingFriends === true ? (\n                  <div className=\"pet-friends\">{petName} liked to play with {boardingFriends}.</div>\n                ) : null}\n                {showFavoriteToy === true ? (\n                  <div className=\"pet-activity\">{gender} favorite toy was the {boardingToy}.</div>\n                ) : null}\n                {showBoardingActivity === true ? (\n                  <div className=\"pet-excitement\">{petName} really enjoyed {boardingActivity}.</div>\n                ) : null}\n                {showGrade === true ? (\n                  <div className=\"overall-grade\">Overall Grade: <span>{grade}</span></div>\n                ) : null}\n                {showNotes === true ? (\n                  <div>\n                    <div className=\"notes\">Notes:</div>\n                    <textarea className=\"notes-input\" rows=\"9\" cols=\"67\" value={notes}></textarea>\n                  </div>\n                ) : null}\n                {showCTA === true ? (\n                  <div className=\"review-cta\">Please leave a review at {CTA}</div>\n                ) : null}\n              </div>\n            </div>\n          ) : null}\n\n          {/* PET SITTING THEME */}\n          {petSittingTheme === true ? (\n            <div className=\"report-data-section\">\n              <div className=\"report-data-col1\">\n                {showWalks === true ? (\n                  <div className=\"number-of-walks\">Number of Walks:<span>{walks}</span></div>\n                ) : null}\n                {showOutsideTime === true ? (\n                  <div className=\"estimated-time-outisde\">Estimated Time Outside Per Day:<span>{outsideTime}</span></div>\n                ) : null}\n                {showAppetite === true ? (\n                  <div className=\"appetite\">Appetite:<span>{appetite}</span></div>\n                ) : null}\n                {showTreats === true ? (\n                  <div className=\"treats-pet-sitting\">Treats:<span>{treats}</span></div>\n                ) : null}\n                {showEnergy === true ? (\n                  <div className=\"energy-level\">Energy Level:<span>{energy}</span></div>\n                ) : null}\n                {showBehaviour === true ? (\n                  <div className=\"behaviour\">Behaviour:<span>{behaviour}</span></div>\n                ) : null}\n                {showGrade === true ? (\n                  <div className=\"overall-grade\">Overall Grade: <span>{grade}</span></div>\n                ) : null}\n                {showNotes === true ? (\n                  <div>\n                    <div className=\"notes\">Notes:</div>\n                    <textarea className=\"notes-input\" rows=\"9\" cols=\"67\" value={notes}></textarea>\n                  </div>\n                ) : null}\n                {showCTA === true ? (\n                  <div className=\"review-cta\">Please leave a review at {CTA}</div>\n                ) : null}\n              </div>\n            </div>\n          ) : null}\n\n          {/* GROOMING THEME */}\n          {groomingTheme === true ? (\n            <div className=\"report-data-section\">\n              <div className=\"report-data-col1\">\n                {showEars === true ? (\n                  <div className=\"grooming-ears\">Ears: <span>{ears}</span></div>\n                ) : null}\n                {showSkin === true ? (\n                  <div className=\"grooming-skin\">Skin: <span>{skin}</span></div>\n                ) : null}\n                {showCoat === true ? (\n                  <div className=\"grooming-coat\">Coat: <span>{coat}</span></div>\n                ) : null}\n                {showBehaviour === true ? (\n                  <div className=\"behaviour\">Behaviour:<span>{behaviour}</span></div>\n                ) : null}\n                {showGrade === true ? (\n                  <div className=\"overall-grade\">Overall Grade: <span>{grade}</span></div>\n                ) : null}\n                {showNotes === true ? (\n                  <div>\n                    <div className=\"notes\">Notes:</div>\n                    <textarea className=\"notes-input\" rows=\"9\" cols=\"67\" value={notes}></textarea>\n                  </div>\n                ) : null}\n                {showCTA === true ? (\n                  <div className=\"review-cta\">Please leave a review at {CTA}</div>\n                ) : null}\n              </div>\n            </div>\n          ) : null}\n\n          {/* WALKING THEME */}\n          {walkingTheme === true ? (\n            <div className=\"report-data-section\">\n              <div className=\"report-data-col1\">\n                {showWalks === true ? (\n                  <div className=\"number-of-walks\">Number of Walks:<span>{walks}</span></div>\n                ) : null}\n                {showOutsideTime === true ? (\n                  <div className=\"estimated-time-outisde\">Estimated Time Outside Per Day:<span>{outsideTime}</span></div>\n                ) : null}\n                {showFetch === true ? (\n                  <div className=\"played-fetch\">Played Fetch:<span>{playedFetch}</span></div>\n                ) : null}\n                {showPlayedWithFriends === true ? (\n                  <div className=\"played-with-friends\">Played With Friends:<span>{playedWithFriends}</span></div>\n                ) : null}\n                {showTuggedLeash === true ? (\n                  <div className=\"tugged-leash\">Tugged On Leash:<span>{tuggedOnLeash}</span></div>\n                ) : null}\n                {showBehaviour === true ? (\n                  <div className=\"behaviour\">Behaviour:<span>{behaviour}</span></div>\n                ) : null}\n                {showGrade === true ? (\n                  <div className=\"overall-grade\">Overall Grade: <span>{grade}</span></div>\n                ) : null}\n                {showNotes === true ? (\n                  <div>\n                    <div className=\"notes\">Notes:</div>\n                    <textarea className=\"notes-input\" rows=\"9\" cols=\"67\" value={notes}></textarea>\n                  </div>\n                ) : null}\n                {showCTA === true ? (\n                  <div className=\"review-cta\">Feel free to leave a review at {CTA}</div>\n                ) : null}\n              </div>\n            </div>\n          ) : null}\n\n        </div>\n      </div>\n\n      {/* Form Editor Section  */}\n\n      <div className=\"menu-right\">\n\n        <div className=\"menu-col-1\">\n\n          <div className=\"input-container\">\n            <label>Pet Service Type:</label>\n            <select className=\"clean-label\" onChange={event => findTheme(event.target.value)}>\n              <option value=\"Select\" selected>Select...</option>\n              <option value=\"Basic\">Basic</option>\n              <option value=\"Boarding\">Boarding</option>\n              <option value=\"Pet Sitting\">Pet Sitting</option>\n              <option value=\"Grooming\">Grooming</option>\n              <option value=\"Walking\">Walking</option>\n            </select>\n          </div>\n\n          {basicTheme === true ? (\n\n            <section>\n              <div className=\"input-container\">\n                <label>Total Walks:</label>\n                <input className=\"total-walks\" onChange={event => setWalks(event.target.value)} type=\"text\"></input>\n                <button onClick={() => setShowWalks(!showWalks)}>{showWalks ? \"x\" : \"show\"} </button>\n              </div>\n\n              <div className=\"input-container\">\n                <label className=\"time-outside-text\">Est. Time Outside Per Day:</label>\n                <input className=\"time-outside-day\" onChange={event => setOutsideTime(event.target.value)} type=\"text\">\n                </input><button onClick={() => setShowOutsideTime(!showOutsideTime)}>{showOutsideTime ? \"x\" : \"show\"}</button>\n              </div>\n\n              <div className=\"input-container\">\n                <label>Appetite:</label><br />\n                <select className=\"appetite clean-label\" onChange={event => setAppetite(event.target.value)}>\n                  <option value=\"Ate Everything\" selected>Ate Everything</option>\n                  <option value=\"Ate Almost Everything\">Ate Almost Everything</option>\n                  <option value=\"Some Issues with Appetite\">Issues With Appetite</option>\n                  <option value=\"Barely Ate\">Barely Ate</option>\n                </select>\n                <button onClick={() => setShowAppetite(!showAppetite)}>{showAppetite ? \"x\" : \"show\"}</button>\n              </div>\n\n              <div className=\"input-container\">\n                <label>Sociability:</label><br />\n                <select className=\"sociability clean-label\" onChange={event => setSociability(event.target.value)}>\n                  <option value=\"Very Sociable\" selected>Very Sociable</option>\n                  <option value=\"Sociable\">Sociable</option>\n                  <option value=\"Kept to Themselves\">Kept to Themselves</option>\n                </select>\n                <button onClick={() => setShowSociability(!showSociability)}>{showSociability ? \"x\" : \"show\"}</button>\n              </div>\n\n              <div className=\"input-container\">\n                <label>Behaviour:</label><br />\n                <select className=\"behaviour clean-label\" onChange={event => setBehaviour(event.target.value)}>\n                  <option value=\"Very Cooperative\" selected>Very Well Behaved</option>\n                  <option value=\"Cooperative\">Well Behaved</option>\n                  <option value=\"Fussy\">Fussy</option>\n                  <option value=\"Needs More Training\">Needs More Training</option>\n                </select>\n                <button onClick={() => setShowBehaviour(!showBehaviour)}>{showBehaviour ? \"x\" : \"show\"}</button>\n              </div>\n            </section>\n\n          ) : null}\n\n          {boardingTheme === true ? (\n\n            <section>\n              <div className=\"input-container\">\n                <label>Gender:</label>\n                <select className=\"pet-gender clean-label\" onChange={event => setGender(event.target.value)}>\n                  <option value=\"His\">Male</option>\n                  <option value=\"Her\">Female</option>\n                  <option value=\"Their\" selected>Select</option>\n                </select>\n              </div>\n\n              <div className=\"input-container\">\n                <label>Friends:</label>\n                <input className=\"friends\" onChange={event => setBoardingFriends(event.target.value)} type=\"text\"></input>\n                <button onClick={() => setShowBoardingFriends(!showBoardingFriends)}>{showBoardingFriends ? \"x\" : \"show\"} </button>\n              </div>\n\n              <div className=\"input-container\">\n                <label>Favorite Toy:</label>\n                <input className=\"favorite-toy\" onChange={event => setBoardingToy(event.target.value)} type=\"text\"></input>\n                <button onClick={() => setShowFavoriteToy(!showFavoriteToy)}>{showFavoriteToy ? \"x\" : \"show\"} </button>\n              </div>\n\n              <div className=\"input-container\">\n                <label>Favorite Activity:</label>\n                <select className=\"pet-boarding-activity clean-label\" onChange={event => setBoardingActivity(event.target.value)}>\n                  <option value=\"[Select an Activity]\" selected>Select</option>\n                  <option value=\"playing with staff\">Playing w Staff</option>\n                  <option value=\"playing outside\">Playing Outside</option>\n                  <option value=\"playing with others\">Playing w Others</option>\n                  <option value=\"nap time\">Nap Time</option>\n                  <option value=\"meal time\">Meal Time</option>\n                  <option value=\"playing fetch\">Playing Fetch</option>\n                  <option value=\"playing Tug-O-War\">Playing Tug-O-War</option>\n                </select>\n                <button onClick={() => setShowBoardingActivity(!setShowBoardingActivity)}>{showBoardingActivity ? \"x\" : \"show\"} </button>\n              </div>\n\n            </section>\n\n          ) : null}\n\n          {petSittingTheme === true ? (\n\n            <section>\n              <div className=\"input-container\">\n                <label>Total Walks:</label>\n                <input className=\"total-walks\" onChange={event => setWalks(event.target.value)} type=\"text\"></input>\n                <button onClick={() => setShowWalks(!showWalks)}>{showWalks ? \"x\" : \"show\"} </button>\n              </div>\n\n              <div className=\"input-container\">\n                <label className=\"time-outside-text\">Est. Time Outside Per Day:</label>\n                <input className=\"time-outside-day\" onChange={event => setOutsideTime(event.target.value)} type=\"text\">\n                </input><button onClick={() => setShowOutsideTime(!showOutsideTime)}>{showOutsideTime ? \"x\" : \"show\"}</button>\n              </div>\n\n              <div className=\"input-container\">\n                <label>Appetite:</label><br />\n                <select className=\"appetite clean-label\" onChange={event => setAppetite(event.target.value)}>\n                  <option value=\"Ate Everything\" selected>Ate Everything</option>\n                  <option value=\"Ate Almost Everything\">Ate Almost Everything</option>\n                  <option value=\"Some Issues with Appetite\">Issues With Appetite</option>\n                  <option value=\"Barely Ate\">Barely Ate</option>\n                </select>\n                <button onClick={() => setShowAppetite(!showAppetite)}>{showAppetite ? \"x\" : \"show\"}</button>\n              </div>\n\n              <div className=\"input-container\">\n                <label className=\"treats-label\">Treats:</label>\n                <input className=\"treats-text\" onChange={event => setTreats(event.target.value)} type=\"text\">\n                </input><button onClick={() => setShowTreats(!showTreats)}>{showTreats ? \"x\" : \"show\"}</button>\n              </div>\n\n              <div className=\"input-container\">\n                <label>Energy Level:</label><br />\n                <select className=\"energy-level clean-label\" onChange={event => setEnergy(event.target.value)}>\n                  <option value=\"Very Energetic\">Very Energetic</option>\n                  <option value=\"Energetic\" selected>Energetic</option>\n                  <option value=\"Normal\">Normal</option>\n                  <option value=\"Calm\">Calm</option>\n                  <option value=\"Sleepy\">Sleepy</option>\n                  <option value=\"Very Sleepy\">Very Sleepy</option>\n                </select>\n                <button onClick={() => setShowEnergy(!showEnergy)}>{showEnergy ? \"x\" : \"show\"}</button>\n              </div>\n\n              <div className=\"input-container\">\n                <label>Behaviour:</label><br />\n                <select className=\"behaviour clean-label\" onChange={event => setBehaviour(event.target.value)}>\n                  <option value=\"Very Cooperative\" selected>Very Well Behaved</option>\n                  <option value=\"Cooperative\">Well Behaved</option>\n                  <option value=\"Fussy\">Fussy</option>\n                  <option value=\"Needs More Training\">Needs More Training</option>\n                </select>\n                <button onClick={() => setShowBehaviour(!showBehaviour)}>{showBehaviour ? \"x\" : \"show\"}</button>\n              </div>\n\n            </section>) : null}\n\n          {groomingTheme === true ? (\n\n            <section>\n              <div className=\"input-container\">\n                <label>Ears: </label>\n                <select className=\"grooming-ears clean-label\" onChange={event => setEars(event.target.value)}>\n                  <option value=\"Great\" selected>Great</option>\n                  <option value=\"Needs More Care\">Needs More Care</option>\n                  <option value=\"Needs To See A Vet\">Needs To See A Vet</option>\n                </select>\n                <button onClick={() => setShowEars(!showEars)}>{showEars ? \"x\" : \"show\"} </button>\n              </div>\n\n              <div className=\"input-container\">\n                <label>Skin: </label>\n                <select className=\"grooming-skin clean-label\" onChange={event => setCoat(event.target.value)}>\n                  <option value=\"Great\" selected>Great</option>\n                  <option value=\"Needs More Care\">Needs More Care</option>\n                  <option value=\"Needs To See A Vet\">Needs To See A Vet</option>\n                </select>\n                <button onClick={() => setShowCoat(!showCoat)}>{showCoat ? \"x\" : \"show\"} </button>\n              </div>\n              <div className=\"input-container\">\n                <label>Coat: </label>\n                <select className=\"grooming-coat clean-label\" onChange={event => setSkin(event.target.value)}>\n                  <option value=\"Great\" selected>Great</option>\n                  <option value=\"Needs More Care\">Needs More Care</option>\n                  <option value=\"Needs To See A Vet\">Needs To See A Vet</option>\n                </select>\n                <button onClick={() => setShowSkin(!showSkin)}>{showSkin ? \"x\" : \"show\"} </button>\n              </div>\n              <div className=\"input-container\">\n                <label>Behaviour:</label><br />\n                <select className=\"behaviour clean-label\" onChange={event => setBehaviour(event.target.value)}>\n                  <option value=\"Very Cooperative\" selected>Very Well Behaved</option>\n                  <option value=\"Cooperative\">Well Behaved</option>\n                  <option value=\"Fussy\">Fussy</option>\n                  <option value=\"Needs More Training\">Needs More Training</option>\n                </select>\n                <button onClick={() => setShowBehaviour(!showBehaviour)}>{showBehaviour ? \"x\" : \"show\"}</button>\n              </div>\n            </section>) : null}\n\n          {walkingTheme === true ? (\n            <section>\n              <div className=\"input-container\">\n                <label>Total Walks:</label>\n                <input className=\"total-walks\" onChange={event => setWalks(event.target.value)} type=\"text\"></input>\n                <button onClick={() => setShowWalks(!showWalks)}>{showWalks ? \"x\" : \"show\"} </button>\n              </div>\n\n              <div className=\"input-container\">\n                <label className=\"time-outside-text\">Est. Time Outside Per Day:</label>\n                <input className=\"time-outside-day\" onChange={event => setOutsideTime(event.target.value)} type=\"text\">\n                </input><button onClick={() => setShowOutsideTime(!showOutsideTime)}>{showOutsideTime ? \"x\" : \"show\"}</button>\n              </div>\n\n              <div className=\"input-container\">\n                <label>Played Fetch:</label><br />\n                <select className=\"played-fetch clean-label\" onChange={event => setPlayedFetch(event.target.value)}>\n                  <option value='Yes' selected>Yes</option>\n                  <option value='No'>No</option>\n                </select>\n                <button onClick={() => setShowFetch(!showFetch)}>{showFetch ? \"x\" : \"show\"}</button>\n              </div>\n\n              <div className=\"input-container\">\n                <label>Played With Friends:</label><br />\n                <select className=\"played-with-friends clean-label\" onChange={event => setPlayedWithFriends(event.target.value)}>\n                  <option value='Yes' selected>Yes</option>\n                  <option value='No'>No</option>\n                </select>\n                <button onClick={() => setShowPlayedWithFriends(!showPlayedWithFriends)}>{showPlayedWithFriends ? \"x\" : \"show\"}</button>\n              </div>\n\n              <div className=\"input-container\">\n                <label>Tugged On Leash:</label><br />\n                <select className=\"tugged-leash clean-label\" onChange={event => setTuggedOnLeash(event.target.value)}>\n                  <option value='Yes'>Yes</option>\n                  <option value='Sometimes'>Sometimes</option>\n                  <option value='No' selected>No</option>\n                </select>\n                <button onClick={() => setShowTuggedLeash(!showTuggedLeash)}>{showTuggedLeash ? \"x\" : \"show\"}</button>\n              </div>\n\n            </section>\n          ) : null\n          }\n\n          <div className=\"input-container\">\n            <label>Overall Grade:</label>\n            <select className=\"grade clean-label\" onChange={event => setGrade(event.target.value)}>\n              <option value=\"A+\" selected>A+</option>\n              <option value=\"A\">A</option>\n              <option value=\"A-\">A-</option>\n              <option value=\"B+\">B+</option>\n              <option value=\"B\">B</option>\n              <option value=\"B-\">B-</option>\n              <option value=\"C+\">C+</option>\n              <option value=\"C\">C</option>\n              <option value=\"C-\">C-</option>\n              <option value=\"D\">D</option>\n              <option value=\"F\">F</option>\n            </select>\n            <button onClick={() => setShowGrade(!showGrade)}>{showGrade ? \"x\" : \"show\"}</button><br />\n          </div>\n\n          <div className=\"input-container-notes input-container\">\n            <label>Notes:</label>\n            <button onClick={() => setShowNotes(!showNotes)}>{showNotes ? \"x\" : \"show\"}</button>\n            <textarea className=\"teachers-notes\" rows=\"6\" cols=\"19\" onChange={event => setNotes(event.target.value)}>\n            </textarea>\n          </div>\n\n          {!selectTheme ? (\n            <div className=\"input-container\">\n              <label>Suggest Review URL:</label>\n              <input className=\"total-walks\" onChange={event => setCTA(event.target.value)} type=\"text\"></input>\n              <button onClick={() => setShowCTA(!showCTA)}>{showCTA ? \"x\" : \"show\"} </button>\n            </div>\n          ) : null}\n\n        </div >\n\n\n        <div className=\"menu-col-2\">\n\n          <div className=\"input-container\">\n            <label>Company Name:</label><br />\n            <input className=\"company-name\" onChange={event => setCompanyName(event.target.value)} type=\"text\"></input><button onClick={() => setShowCompany(!showCompany)}>{showCompany ? \"x\" : \"show\"}</button><br />\n          </div>\n\n          <div className=\"input-container\">\n            <label>Pet Name:</label><br />\n            <input className=\"pet-name\" onChange={event => setPetName(event.target.value)} type=\"text\" ></input><span className=\"name-required\">Required</span>\n          </div>\n\n          <div className=\"input-container\">\n            <label>Date(s):</label><br />\n            <input className=\"date\" onChange={event => setDate(event.target.value)} type=\"text\" ></input><span className=\"date-required\">Required</span>\n          </div>\n\n          <div className=\"input-container\">\n            <label className=\"company-font\">Heading:</label>\n            <select className=\"clean-label\" onChange={event => findCompanyFont(event.target.value)}>\n              <option value=\"Sans Serif\">Sans Serif</option>\n              <option value=\"Candara\">Candara</option>\n              <option value=\"Copperplate\">Copperplate</option>\n              <option value=\"Didot\" selected>Didot</option>\n              <option value=\"Cursive\">Cursive</option>\n            </select>\n          </div>\n\n        </div>\n\n      </div >\n\n    </div >\n  )\n}","/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/components/QuestionsModal.js",[],"/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/components/SettingsModal.js",[],"/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/components/Login.js",["57"],"/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/components/Register.js",["58"],"/Users/matthewford/lighthouse/projects/pet-report-app/pet-report/src/components/About.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":4,"column":17,"nodeType":"65","messageId":"66","endLine":4,"endColumn":23},{"ruleId":"63","severity":1,"message":"67","line":4,"column":25,"nodeType":"65","messageId":"66","endLine":4,"endColumn":33},{"ruleId":"59","replacedBy":"68"},{"ruleId":"61","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":203,"column":11,"nodeType":"72","endLine":203,"endColumn":68},{"ruleId":"70","severity":1,"message":"71","line":35,"column":11,"nodeType":"72","endLine":35,"endColumn":75},{"ruleId":"70","severity":1,"message":"71","line":35,"column":11,"nodeType":"72","endLine":35,"endColumn":82},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.",["73"],["74"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]